[{"/Users/mishamarodi/Desktop/ant-forms/src/reportWebVitals.js":"1","/Users/mishamarodi/Desktop/ant-forms/src/App.js":"2","/Users/mishamarodi/Desktop/ant-forms/src/components/Header/Header.js":"3","/Users/mishamarodi/Desktop/ant-forms/src/components/OrganisationRegisterForm/RegisterHeader/RegisterHeader.js":"4","/Users/mishamarodi/Desktop/ant-forms/src/index.js":"5","/Users/mishamarodi/Desktop/ant-forms/src/redux/store/store.js":"6","/Users/mishamarodi/Desktop/ant-forms/src/redux/reducers/OrganisationDataRducer.js":"7","/Users/mishamarodi/Desktop/ant-forms/src/redux/sagas/RootSagas.js":"8","/Users/mishamarodi/Desktop/ant-forms/src/api/api.js":"9","/Users/mishamarodi/Desktop/ant-forms/src/redux/sagas/fetchOrganisationSaga.js":"10","/Users/mishamarodi/Desktop/ant-forms/src/components/OrganisationRegisterForm/OrganisationRegisterForm.js":"11","/Users/mishamarodi/Desktop/ant-forms/src/redux/types.js":"12","/Users/mishamarodi/Desktop/ant-forms/src/redux/reducers/AppReducer.js":"13","/Users/mishamarodi/Desktop/ant-forms/src/components/UserRegisterForm/UserRegisterForm1.js":"14","/Users/mishamarodi/Desktop/ant-forms/src/components/UserRegisterForm/UserRegisterForm2.js":"15","/Users/mishamarodi/Desktop/ant-forms/src/components/UserRegisterForm/UserRegisterForm3.js":"16","/Users/mishamarodi/Desktop/ant-forms/src/redux/reducers/UserDataReducer.js":"17"},{"size":362,"mtime":1608034658719,"results":"18","hashOfConfig":"19"},{"size":996,"mtime":1608092954788,"results":"20","hashOfConfig":"19"},{"size":381,"mtime":1608063732409,"results":"21","hashOfConfig":"19"},{"size":882,"mtime":1608094826002,"results":"22","hashOfConfig":"19"},{"size":689,"mtime":1608087186739,"results":"23","hashOfConfig":"19"},{"size":662,"mtime":1608092921940,"results":"24","hashOfConfig":"19"},{"size":499,"mtime":1608092141812,"results":"25","hashOfConfig":"19"},{"size":207,"mtime":1608082177021,"results":"26","hashOfConfig":"19"},{"size":637,"mtime":1608095579338,"results":"27","hashOfConfig":"19"},{"size":953,"mtime":1608091825860,"results":"28","hashOfConfig":"19"},{"size":5035,"mtime":1608091640776,"results":"29","hashOfConfig":"19"},{"size":361,"mtime":1608092419677,"results":"30","hashOfConfig":"19"},{"size":871,"mtime":1608092112165,"results":"31","hashOfConfig":"19"},{"size":4749,"mtime":1608094569022,"results":"32","hashOfConfig":"19"},{"size":4319,"mtime":1608094336125,"results":"33","hashOfConfig":"19"},{"size":3107,"mtime":1608095399228,"results":"34","hashOfConfig":"19"},{"size":1103,"mtime":1608094972092,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"17r0o0w",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mishamarodi/Desktop/ant-forms/src/reportWebVitals.js",[],["72","73"],"/Users/mishamarodi/Desktop/ant-forms/src/App.js",[],"/Users/mishamarodi/Desktop/ant-forms/src/components/Header/Header.js",[],"/Users/mishamarodi/Desktop/ant-forms/src/components/OrganisationRegisterForm/RegisterHeader/RegisterHeader.js",[],"/Users/mishamarodi/Desktop/ant-forms/src/index.js",[],"/Users/mishamarodi/Desktop/ant-forms/src/redux/store/store.js",[],"/Users/mishamarodi/Desktop/ant-forms/src/redux/reducers/OrganisationDataRducer.js",[],"/Users/mishamarodi/Desktop/ant-forms/src/redux/sagas/RootSagas.js",["74","75"],"/Users/mishamarodi/Desktop/ant-forms/src/api/api.js",[],"/Users/mishamarodi/Desktop/ant-forms/src/redux/sagas/fetchOrganisationSaga.js",["76","77"],"/Users/mishamarodi/Desktop/ant-forms/src/components/OrganisationRegisterForm/OrganisationRegisterForm.js",["78"],"import React from 'react';\nimport {Form, Input, Button, Checkbox} from 'antd';\nimport InfoCircleOutlined from \"@ant-design/icons/lib/icons/InfoCircleOutlined\";\nimport styles from './RegisterForm.module.css'\nimport RegisterHeader from \"./RegisterHeader/RegisterHeader\";\nimport {Typography} from \"antd\";\nimport s from './RegisterForm.module.css'\nimport google from '../../assets/image/google.png'\nimport {useDispatch} from \"react-redux\";\nimport {\n    setOrganisationData,\n} from \"../../redux/reducers/OrganisationDataRducer\";\n\nconst {Paragraph} = Typography;\n\nconst validateMessages = {\n    required: 'Please fill out this field',\n    types: {\n        email: 'Please enter a correct email',\n    }\n};\n\nconst OrganisationRegisterForm = () => {\n\n    const dispatch = useDispatch();\n    const [form] = Form.useForm();\n\n    const onFinish = values => {\n        console.log('Success:', values);\n        dispatch(setOrganisationData(values))\n        form.resetFields();\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (<section className={s.section}>\n\n            <RegisterHeader/>\n\n            <Form validateMessages={validateMessages}\n                  name=\"orgRegisterForm\"\n                  initialValues={{remember: true}}\n                  onFinish={onFinish}\n                  onFinishFailed={onFinishFailed}\n                  form={form}\n            >\n                <Form.Item\n                    name=\"Name\"\n                    rules={[{required: true}]}\n                >\n                    <Input placeholder=\"Name\" suffix={<InfoCircleOutlined/>}/>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"Organisation Name\"\n                    rules={[{required: true}]}\n                >\n                    <Input placeholder=\"Organisation name\" suffix={<InfoCircleOutlined/>}/>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"YourPosition\"\n                    rules={[{required: true}]}\n                >\n                    <Input placeholder=\"Your position\" suffix={<InfoCircleOutlined/>}/>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"Email\"\n                    hasFeedback\n\n                    rules={[\n                        {\n                            required: true,\n                            type: \"email\",\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Email Address\" suffix={<InfoCircleOutlined/>}/>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                        },\n                    ]}\n                >\n                    <Input.Password placeholder=\"Password\"/>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"confirm\"\n                    dependencies={['password']}\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        ({getFieldValue}) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                    return Promise.resolve();\n                                }\n                                return Promise.reject('The two passwords that you entered do not match!');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input.Password placeholder=\"Confirm Password\"/>\n                </Form.Item>\n\n                <div className={s.footer}>\n                    <Paragraph>\n                        By signing up you agree to our <b>Terms of Use</b> and <b>Privacy Policy</b>\n                    </Paragraph>\n\n                    <Form.Item initialValue={false} name=\"ReceiveEmails\" valuePropName=\"checked\">\n                        <Checkbox>I want to receive emails from Symptomaticall Teams</Checkbox>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button block shape={\"round\"} className={s.signUp} type=\"primary\" htmlType=\"submit\">\n                            Sign Up\n                        </Button>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button block shape={\"round\"} className={`${s.signUp} ${s.google}`} type=\"primary\">\n                            <div className={s.btnInsides}><img className={s.googleImg} src={google}\n                                                               alt={\"google\"}/> Sign Up with Google\n                            </div>\n                        </Button>\n                    </Form.Item>\n                </div>\n\n            </Form>\n\n        </section>\n    );\n};\n\nexport default OrganisationRegisterForm;\n","/Users/mishamarodi/Desktop/ant-forms/src/redux/types.js",[],"/Users/mishamarodi/Desktop/ant-forms/src/redux/reducers/AppReducer.js",[],"/Users/mishamarodi/Desktop/ant-forms/src/components/UserRegisterForm/UserRegisterForm1.js",[],"/Users/mishamarodi/Desktop/ant-forms/src/components/UserRegisterForm/UserRegisterForm2.js",["79","80","81","82"],"/Users/mishamarodi/Desktop/ant-forms/src/components/UserRegisterForm/UserRegisterForm3.js",["83","84","85"],"/Users/mishamarodi/Desktop/ant-forms/src/redux/reducers/UserDataReducer.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":9,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"90","severity":1,"message":"94","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":20},{"ruleId":"90","severity":1,"message":"95","line":5,"column":5,"nodeType":"92","messageId":"93","endLine":5,"endColumn":29},{"ruleId":"90","severity":1,"message":"96","line":6,"column":5,"nodeType":"92","messageId":"93","endLine":6,"endColumn":29},{"ruleId":"90","severity":1,"message":"97","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":14},{"ruleId":"90","severity":1,"message":"98","line":4,"column":17,"nodeType":"92","messageId":"93","endLine":4,"endColumn":25},{"ruleId":"90","severity":1,"message":"99","line":4,"column":48,"nodeType":"92","messageId":"93","endLine":4,"endColumn":58},{"ruleId":"90","severity":1,"message":"100","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":14},{"ruleId":"90","severity":1,"message":"101","line":8,"column":9,"nodeType":"92","messageId":"93","endLine":8,"endColumn":31},{"ruleId":"90","severity":1,"message":"102","line":2,"column":22,"nodeType":"92","messageId":"93","endLine":2,"endColumn":33},{"ruleId":"90","severity":1,"message":"103","line":4,"column":22,"nodeType":"92","messageId":"93","endLine":4,"endColumn":45},{"ruleId":"90","severity":1,"message":"104","line":5,"column":9,"nodeType":"92","messageId":"93","endLine":5,"endColumn":17},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'take' is defined but never used.","Identifier","unusedVar","'call' is defined but never used.","'fetchOrganiseDataFailure' is defined but never used.","'fetchOrganiseDataSuccess' is defined but never used.","'styles' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'google' is defined but never used.","'setUserIsFirstPartDone' is defined but never used.","'useSelector' is defined but never used.","'setUserIsSecondPartDone' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]